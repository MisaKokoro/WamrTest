/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: struct.proto */

#ifndef PROTOBUF_C_struct_2eproto__INCLUDED
#define PROTOBUF_C_struct_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Person Person;
typedef struct Fib Fib;


/* --- enums --- */


/* --- messages --- */

struct  Person
{
  ProtobufCMessage base;
  char *name;
};
#define PERSON__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&person__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  Fib
{
  ProtobufCMessage base;
  int32_t num;
};
#define FIB__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&fib__descriptor) \
    , 0 }


/* Person methods */
void   person__init
                     (Person         *message);
size_t person__get_packed_size
                     (const Person   *message);
size_t person__pack
                     (const Person   *message,
                      uint8_t             *out);
size_t person__pack_to_buffer
                     (const Person   *message,
                      ProtobufCBuffer     *buffer);
Person *
       person__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   person__free_unpacked
                     (Person *message,
                      ProtobufCAllocator *allocator);
/* Fib methods */
void   fib__init
                     (Fib         *message);
size_t fib__get_packed_size
                     (const Fib   *message);
size_t fib__pack
                     (const Fib   *message,
                      uint8_t             *out);
size_t fib__pack_to_buffer
                     (const Fib   *message,
                      ProtobufCBuffer     *buffer);
Fib *
       fib__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   fib__free_unpacked
                     (Fib *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Person_Closure)
                 (const Person *message,
                  void *closure_data);
typedef void (*Fib_Closure)
                 (const Fib *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor person__descriptor;
extern const ProtobufCMessageDescriptor fib__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_struct_2eproto__INCLUDED */
